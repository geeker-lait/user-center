<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmt.mbsp.user.dao.mapper.user.UserMapper">
  <resultMap id="BaseResultMap" type="com.lmt.mbsp.user.entity.user.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="domicile" jdbcType="VARCHAR" property="domicile" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="qq" jdbcType="VARCHAR" property="qq" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="is_supplement" jdbcType="BOOLEAN" property="isSupplement"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_user
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lmt.mbsp.user.entity.user.User" useGeneratedKeys="true" keyProperty="id">
    insert into t_user (id, age, create_time,
      domicile, id_card, name,
      sex, state,
      email, qq, is_supplement,
      phone)
    values (#{id,jdbcType=BIGINT}, #{age,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{domicile,jdbcType=VARCHAR}, #{idCard,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{sex,jdbcType=INTEGER}, #{state,jdbcType=INTEGER},
      #{email,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{isSupplement,jdbcType=BOOLEAN},
      #{phone,jdbcType=VARCHAR})
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.lmt.mbsp.user.entity.user.User">
    update t_user
    set age = #{age,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      domicile = #{domicile,jdbcType=VARCHAR},
      id_card = #{idCard,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      qq = #{qq,jdbcType=VARCHAR},
      is_supplement = #{isSupplement,jdbcType=BOOLEAN},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select <include refid="selFields"/>
    from t_user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectSingle" parameterType="com.lmt.mbsp.user.entity.user.User" resultMap="BaseResultMap">
    select <include refid="selFields"/>
    from t_user
    where
    <if test="id != null">
      id = #{id,jdbcType=BIGINT}
    </if>
    <if test="name != null">
      AND `name` = #{name}
    </if>
  </select>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.lmt.mbsp.user.entity.user.User">
    select <include refid="selFields"/>
    from t_user
    <include refid="paramSql"/>
    ORDER BY id DESC
  </select>

  <select id="count" parameterType="com.lmt.mbsp.user.entity.user.User" resultType="java.lang.Integer">
    select count(*)
    from t_user
    <include refid="paramSql"/>
  </select>

  <!--查询返回字段-->
  <sql id="selFields">id, age, create_time, domicile, id_card, `name`, sex, state, email, qq, is_supplement, phone</sql>

  <!--查询参数-->
  <sql id="paramSql">
    <where>
      <!--1=1 <![CDATA[&nbsp;]]>-->
      <if test="id != null">AND id=#{id,jdbcType=BIGINT}</if>
      <if test="state != null">AND state=#{state,jdbcType=INTEGER}</if>
      <if test="name != null">AND `name` LIKE CONCAT('%',#{name,jdbcType=VARCHAR},'%')</if>
      <if test="isSupplement != null">AND is_supplement=#{isSupplement,jdbcType=BOOLEAN} </if>
      <if test="ids != null and ids.size()>0">
        AND
        <foreach collection="ids" item="id" open="(" close=")" separator="or">
          id = #{id}
        </foreach>
      </if>
      <!--<if test="limit!=null">-->
        <!--limit ${limit}-->
      <!--</if>-->
    </where>
  </sql>
</mapper>
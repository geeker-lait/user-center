<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lmt.mbsp.user.dao.mapper.account.AccountMapper">
  <resultMap id="BaseResultMap" type="com.lmt.mbsp.user.entity.account.Account">
    <id column="id" jdbcType="BIGINT" property="id"/>
    <result column="account_name" jdbcType="VARCHAR" property="account_name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="manager_type" jdbcType="INTEGER" property="managerType" />
    <result column="master" jdbcType="INTEGER" property="master" />
    <result column="register_type" jdbcType="INTEGER" property="registerType" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="lock_time" jdbcType="INTEGER" property="lockTime" />
    <result column="is_lock" jdbcType="BOOLEAN" property="isLock" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
  </resultMap>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from
      t_account
    where
      id = #{id,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.lmt.mbsp.user.entity.account.Account">
    insert into t_account (
      account_name, password, manager_type, master, state,create_time, register_type, lock_time, is_lock
    ) values (
      #{account_name,jdbcType=VARCHAR},
      #{password,jdbcType=VARCHAR},
      #{managerType,jdbcType=INTEGER},
      #{master,jdbcType=INTEGER},
      #{state,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{registerType,jdbcType=INTEGER},
      #{lockTime,jdbcType=INTEGER},
      #{isLock,jdbcType=BOOLEAN}
    )
  </insert>

  <update id="updateByPrimaryKey" parameterType="com.lmt.mbsp.user.entity.account.Account">
    update
      t_account
    set
      account_name = #{account_name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      manager_type = #{managerType,jdbcType=INTEGER},
      master = #{master,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      register_type = #{registerType,jdbcType=INTEGER},
      lock_time = #{lockTime,jdbcType=INTEGER},
      is_lock = #{isLock,jdbcType=BOOLEAN}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
      <include refid="selFields"/>
    from
      t_account
    where
      id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectSingle" parameterType="com.lmt.mbsp.user.entity.account.Account" resultMap="BaseResultMap">
    select
      <include refid="selFields"/>
    from
      t_account
      <include refid="paramSql"/>
  </select>

  <select id="selectAll" resultMap="BaseResultMap" parameterType="com.lmt.mbsp.user.entity.account.Account">
    select
      <include refid="selFields"/>
    from
      t_account
      <include refid="paramSql"/>
  </select>

  <select id="count" parameterType="java.lang.Long" resultType="java.lang.Integer">
    select
      count(*)
    from
      t_account
      <include refid="paramSql"/>
  </select>

  <!--查询返回字段-->
  <sql id="selFields">id, account_name, password, manager_type, master, register_type, state, create_time, lock_time, is_lock</sql>

  <!--查询参数-->
  <sql id="paramSql">
    <where>
      <if test="id != null">AND id=#{id,jdbcType=BIGINT}</if>
      <if test="account_name != null">AND account_name=#{account_name,jdbcType=VARCHAR}</if>
      <if test="password != null">AND email=#{password,jdbcType=VARCHAR}</if>
      <if test="state != null">AND state=#{state,jdbcType=INTEGER}</if>
      <if test="isLock != null">AND is_lock=#{isLock,jdbcType=BOOLEAN}</if>
      <if test="master != null">AND master=#{master,jdbcType=INTEGER}</if>
      <if test="registerType != null">AND register_type=#{registerType,jdbcType=INTEGER}</if>
      <if test="ids != null">
        AND
        <foreach collection="ids" item="id" open="(" close=")" separator="or">
          id = #{id}
        </foreach>
      </if>
    </where>
  </sql>
</mapper>